{"version":3,"sources":["component/Weather.js","component/Form.js","App.js","reportWebVitals.js","index.js"],"names":["Weather","props","tempreture","Math","floor","city","country","humidity","description","error","Form","onSubmit","getWeather","type","placeholder","name","APIKey","App","state","e","a","preventDefault","target","elements","value","fetch","api","json","data","setState","main","temp","sys","weather","className","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"qPAeeA,EAdC,SAACC,GACb,OACI,gCACKA,EAAMC,YAAc,8CAAiBC,KAAKC,MAAMH,EAAMC,WAAW,WAClE,yCAAYD,EAAMI,QAClB,4CAAeJ,EAAMK,WACrB,6CAAgBL,EAAMM,YACtB,gDAAmBN,EAAMO,eACzB,4BAAIP,EAAMQ,YCCPC,EATJ,SAACT,GACR,OACI,uBAAMU,SAAUV,EAAMW,WAAtB,UACI,uBAAOC,KAAK,OAAOC,YAAY,WAAWC,KAAK,SAC/C,uBAAOF,KAAK,OAAOC,YAAY,cAAcC,KAAK,YAClD,qDCFNC,EAAO,mCAwDEC,E,4MArDbC,MAAM,CACJhB,WAAW,GACXG,KAAK,GACLC,QAAQ,GACRC,SAAS,GACTC,YAAY,GACZC,MAAM,I,EAERG,W,uCAAW,WAAOO,GAAP,qBAAAC,EAAA,6DACTD,EAAEE,iBACIhB,EAAKc,EAAEG,OAAOC,SAASlB,KAAKmB,MAC5BlB,EAAQa,EAAEG,OAAOC,SAASjB,QAAQkB,MAH/B,SAIOC,MAAM,qDAAD,OAAsDpB,EAAtD,YAA8DC,EAA9D,kBAA+EU,IAJ3F,cAIHU,EAJG,gBAKQA,EAAIC,OALZ,OAKHC,EALG,OAMLvB,GAAMC,EACR,EAAKuB,SAAS,CACZ3B,WAAW0B,EAAKE,KAAKC,KACrB1B,KAAKuB,EAAKb,KACVT,QAAQsB,EAAKI,IAAI1B,QACjBC,SAASqB,EAAKE,KAAKvB,SACnBC,YAAYoB,EAAKK,QAAQ,GAAGzB,YAC5BC,MAAM,KAGR,EAAKoB,SAAS,CACZ3B,WAAW,GACXG,KAAK,GACLC,QAAQ,GACRC,SAAS,GACTC,YAAY,GACZC,MAAM,0BAtBD,4C,kGA4BX,WACE,OACI,sBAAKyB,UAAU,MAAf,UACE,cAAC,EAAD,CACChC,WAAYiC,KAAKjB,MAAMhB,WACvBG,KAAM8B,KAAKjB,MAAMb,KACjBC,QAAS6B,KAAKjB,MAAMZ,QACpBC,SAAU4B,KAAKjB,MAAMX,SACrBC,YAAa2B,KAAKjB,MAAMV,YACxBC,MAAO0B,KAAKjB,MAAMT,QAEnB,cAAC,EAAD,CAAMG,WAAYuB,KAAKvB,oB,GAhDfwB,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,SAChDZ,M","file":"static/js/main.b407e717.chunk.js","sourcesContent":["import React from \"react\";\r\n  const Weather=(props)=>{\r\n    return(\r\n        <div>\r\n            {props.tempreture && <p> tempreture :{Math.floor(props.tempreture-273.15)}</p>}\r\n            <p> city : {props.city}</p>\r\n            <p> country : {props.country}</p>\r\n            <p> humidity : {props.humidity}</p>\r\n            <p> description : {props.description}</p>\r\n            <p>{props.error}</p>\r\n        </div>\r\n    )\r\n    \r\n  } \r\n\r\nexport default Weather;","import React from 'react';\r\nconst Form=(props)=>{\r\n    return(\r\n        <form onSubmit={props.getWeather}>\r\n            <input type=\"text\" placeholder=\"City ...\" name=\"city\"/>\r\n            <input type=\"text\" placeholder=\"Country ...\" name=\"country\"/>\r\n            <button>Get Weather</button>\r\n        </form>\r\n    )\r\n}\r\nexport default Form;","import { Component } from 'react';\nimport './App.css';\nimport Weather from './component/Weather';\nimport Form from './component/Form';\nconst APIKey='fe88e17f0bf5e600ee23c9a380f63700';\n//http://api.openweathermap.org/data/2.5/weather?q=cairo%2Cegypt&appid=e36ed364400282e43250b6c4c0274d44\nclass App extends Component {\n  state={\n    tempreture:'',\n    city:'',\n    country:'',\n    humidity:'',\n    description:'',\n    error:''\n  }\n  getWeather=async (e)=>{\n    e.preventDefault();\n    const city=e.target.elements.city.value;\n    const country=e.target.elements.country.value;\n    const api=await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${APIKey}`);\n    const data=await api.json();\n    if (city&&country) {\n      this.setState({\n        tempreture:data.main.temp,\n        city:data.name,\n        country:data.sys.country,\n        humidity:data.main.humidity,\n        description:data.weather[0].description,\n        error:''\n      })\n    } else {\n      this.setState({\n        tempreture:'',\n        city:'',\n        country:'',\n        humidity:'',\n        description:'',\n        error:'please Enter Countyry'\n      })\n      \n    }\n   \n  }\n  render(){\n    return(\n        <div className=\"App\">  \n          <Weather\n           tempreture={this.state.tempreture}\n           city={this.state.city}\n           country={this.state.country}\n           humidity={this.state.humidity}\n           description={this.state.description}\n           error={this.state.error}\n          />\n          <Form getWeather={this.getWeather}/>\n        </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />,document.getElementById('root'));\nreportWebVitals();\n"],"sourceRoot":""}